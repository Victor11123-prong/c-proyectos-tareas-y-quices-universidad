/*===============================================ejercicio 1====================================*/
#include <iostream>
#include <algorithm>

using namespace std ;

double calcular_mediana(int arr[], int n) {
    sort(arr, arr + n);

    if (n % 2 == 0) {
        return (arr[n/2 - 1] + arr[n/2]) / 2.0;
    } else {
        return arr[n/2];
    }
}

int main() {
    int n;
    cout << "Ingrese el tamaÃ±o del arreglo: ";
    cin >> n;

    int arr[n];
    cout << "Ingrese los elementos del arreglo:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    double mediana = calcular_mediana(arr, n);
    cout << "La mediana es: " << mediana << endl;

    return 0;
}
/*================================Ejercicio 2======================================*/
#include <iostream>
using namespace std;

int main() {
    int arr[] = {2, 4, 6, 8, 10, 12, 14};
    int n = sizeof(arr) / sizeof(arr[0]);

    int x;
    cout << "Ingrese el numero que desea buscar: ";
    cin >> x;

    int comienzo = 0;
    int final = n - 1;
    int resultado = -1;

    while (comienzo <= final) {
        int medio = comienzo + (final - comienzo) / 2;

        if (arr[medio] == x) {
            resultado = medio;
            break;
        }
        else if (arr[medio] < x) {
            comienzo = medio + 1;
        }
        else {
            final = medio - 1;
        }
    }

    if (resultado != -1) {
        cout << "El numero " << x << " se encuentra en la posicion " << resultado << endl;
    } else {
        cout << "El numero " << x << " no se encuentra en el arreglo" << endl;
    }

    return 0;
}
===============================================/*Ejercicio 3==========================================================0*/
#include <iostream>
using namespace std;

int main() {
    int filas, columnas;

    cout << "Ingrese el numero de filas: ";

    cin >> filas;

    cout << "Ingrese el numero de columnas: ";

    cin >> columnas;

    int matriz[100][100];

    int transpuesta[100][100];

    cout << "Ingrese los elementos de la matriz:" << endl;
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            cout << "Elemento [" << i << "][" << j << "]: ";
            cin >> matriz[i][j];
        }
    }

    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            transpuesta[j][i] = matriz[i][j];
        }
    }

    cout << "\nMatriz original:" << endl;
    for (int i = 0; i < filas; i++) {
        for (int j = 0; j < columnas; j++) {
            cout << matriz[i][j] << " ";
        }
        cout << endl;
    }

    cout << "\nMatriz transpuesta:" << endl;
    for (int i = 0; i < columnas; i++) {
        for (int j = 0; j < filas; j++) {
            cout << transpuesta[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}
/*===========================================Ejercicio 4====================================================*/
#include <iostream>
#include <string>
#include <limits>
using namespace std;

int main() {
    const int MAX = 100;
    string nombres[MAX];
    int cantidades[MAX];
    double precios[MAX];
    int total_productos = 0;

    int opcion;

    do {
        cout << "\n=== SISTEMA DE INVENTARIO ===" << endl;
        cout << "1. Agregar producto" << endl;
        cout << "2. Mostrar inventario" << endl;
        cout << "3. Buscar producto" << endl;
        cout << "4. Salir" << endl;
        cout << "Ingrese una opcion: ";
        cin >> opcion;

        if (opcion == 1) {
            if (total_productos < MAX) {
                cout << "Nombre del producto: ";
                cin.ignore(numeric_limits<streamsize>::max(), '\n');
                getline(cin, nombres[total_productos]);
                cout << "Cantidad: ";
                cin >> cantidades[total_productos];
                cout << "Precio: ";
                cin >> precios[total_productos];

                total_productos++;
                cout << "Producto agregado correctamente." << endl;
            } else {
                cout << "Inventario lleno, no se pueden agregar mas productos." << endl;
            }
        } 
        else if (opcion == 2) {
            cout << "\n--- INVENTARIO ---" << endl;
            for (int i = 0; i < total_productos; i++) {
                cout << i + 1 << ". " << nombres[i] 
                     << " | Cantidad: " << cantidades[i] 
                     << " | Precio: $" << precios[i] << endl;
            }
            if (total_productos == 0) {
                cout << "No hay productos en el inventario." << endl;
            }
        } 
        else if (opcion == 3) {
            string buscar;
            cout << "Ingrese el nombre del producto a buscar: ";
            cin.ignore(numeric_limits<streamsize>::max(), '\n');
            getline(cin, buscar);

            bool encontrado = false;
            for (int i = 0; i < total_productos; i++) {
                if (nombres[i] == buscar) {
                    cout << "Producto encontrado: " << nombres[i] 
                         << " | Cantidad: " << cantidades[i] 
                         << " | Precio: $" << precios[i] << endl;
                    encontrado = true;
                    break;
                }
            }
            if (!encontrado) {
                cout << "El producto no esta en el inventario." << endl;
            }
        } 
        else if (opcion == 4) {
            cout << "Saliendo del sistema..." << endl;
        } 
        else {
            cout << "Opcion invalida, intente de nuevo." << endl;
        }

    } while (opcion != 4);

    return 0;
}
/*====================================ejercicio 5======================================================*/
#include <iostream>
using namespace std;

int main() {
    int n;

    cout << "Ingrese la cantidad de elementos: ";
    cin >> n;

    int arr[100];

    cout << "Ingrese los elementos del arreglo:" << endl;
    for (int i = 0; i < n; i++) {
        cout << "Elemento " << i + 1 << ": ";
        cin >> arr[i];
    }

    for (int i = 0; i < n - 1; i++) {
        int minIndex = i;
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
    
        int temp = arr[i];
        arr[i] = arr[minIndex];
        arr[minIndex] = temp;
    }

    cout << "\nArreglo ordenado de menor a mayor:" << endl;
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}
/*====================================ejercicio 6======================================================*/
#include <iostream>
using namespace std;

int main() {
    int n;

    cout << "Ingrese la cantidad de elementos del arreglo: ";
    cin >> n;

    int arr[100];

    cout << "Ingrese los elementos del arreglo:" << endl;
    for (int i = 0; i < n; i++) {
        cout << "Elemento " << i + 1 << ": ";
        cin >> arr[i];
    }

    cout << "\nElementos duplicados encontrados:" << endl;
    bool hay_duplicados = false;

    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if (arr[i] == arr[j]) {
                cout << arr[i] << " ";
                hay_duplicados = true;
                break;
            }
        }
    }

    if (!hay_duplicados) {
        cout << "No hay elementos duplicados." << endl;
    }

    cout << endl;
    return 0;
}
/*===========================================Ejercicio 7====================================================*/

#include <iostream>
using namespace std;

int main() {
    char tablero[3][3];
    int fila, columna;
    char jugador = 'X';
    bool ganador = false;
    int movimientos = 0;

    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            tablero[i][j] = ' ';
        }
    }

    while (!ganador && movimientos < 9) {
        cout << "\n   0   1   2\n";
        for (int i = 0; i < 3; i++) {
            cout << i << " ";
            for (int j = 0; j < 3; j++) {
                cout << " " << tablero[i][j];
                if (j < 2) cout << " |";
            }
            cout << endl;
            if (i < 2) cout << "  ---+---+---" << endl;
        }
        /*movimiento del jugador*/
        cout << "\nTurno del jugador " << jugador << endl;
        cout << "Ingrese fila (0-2): ";
        cin >> fila;
        cout << "Ingrese columna (0-2): ";
        cin >> columna;

        /*rectificar movimiento*/
        if (fila < 0 || fila > 2 || columna < 0 || columna > 2 || tablero[fila][columna] != ' ') {
            cout << "Movimiento invalido, intenta de nuevo." << endl;
            continue;
        }

        tablero[fila][columna] = jugador;
        movimientos++;

        for (int i = 0; i < 3; i++) {
            if (tablero[i][0] == jugador && tablero[i][1] == jugador && tablero[i][2] == jugador) ganador = true;
            if (tablero[0][i] == jugador && tablero[1][i] == jugador && tablero[2][i] == jugador) ganador = true;
        }
        if (tablero[0][0] == jugador && tablero[1][1] == jugador && tablero[2][2] == jugador) ganador = true;
        if (tablero[0][2] == jugador && tablero[1][1] == jugador && tablero[2][0] == jugador) ganador = true;

        if (!ganador) {
            jugador = (jugador == 'X') ? 'O' : 'X';
        }
    }

    cout << "\n   0   1   2\n";
    for (int i = 0; i < 3; i++) {
        cout << i << " ";
        for (int j = 0; j < 3; j++) {
            cout << " " << tablero[i][j];
            if (j < 2) cout << " |";
        }
        cout << endl;
        if (i < 2) cout << "  ---+---+---" << endl;
    }

    if (ganador) {
        cout << "\nEl jugador " << jugador << " ha ganado!" << endl;
    } else {
        cout << "\nEmpate!" << endl;
    }

    return 0;
}
